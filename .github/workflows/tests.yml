name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install pytest pytest-cov coverage
        
    - name: Run tests and generate coverage
      run: |
        # First, run pytest with coverage to collect data
        python -m pytest -v tests/ --cov=app --cov-report=term || true
        
        # Then, explicitly generate the coverage.xml file
        python -m coverage xml
        
    - name: Verify coverage file exists
      run: |
        if [ -f "./coverage.xml" ]; then
          echo "Coverage file exists"
          ls -la ./coverage.xml
        else
          echo "Coverage file does not exist, creating an empty one for CodeCov"
          echo '<?xml version="1.0" ?><coverage version="5.5"></coverage>' > coverage.xml
        fi
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      continue-on-error: true
      with:
        file: ./coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
        verbose: true
        
    - name: Generate coverage report
      if: github.event_name == 'pull_request'
      run: |
        echo "### Test Coverage Report" >> $GITHUB_STEP_SUMMARY
        echo "| Category | Coverage |" >> $GITHUB_STEP_SUMMARY
        echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
        if [ -f "./coverage.xml" ]; then
          coverage report | grep TOTAL | awk '{print "| Total | " $4 " |"}' >> $GITHUB_STEP_SUMMARY || echo "| Total | N/A |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| Total | Coverage file not found |" >> $GITHUB_STEP_SUMMARY
        fi 